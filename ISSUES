==============================================================================
  ISSUE 1: tdds namespace should be removed
==============================================================================
[Description] 
The tdds namespace contains currently the type generators for the
API. However keepint the generators under the tdds namespace makes it
more difficult to navigate the API as well as the doc.

[Proposed Resolution]
Remove the tdd namespace and prepend the classes within the tdds with a "T"


==============================================================================
  ISSUE 2: create_* methods on parent DDS entities complicates the API
==============================================================================
[Description] 

[Proposed Resolution]
Reinstate ctors

NOTE: Get rid of "parent" methods and re-introduce the getter in the classes.
==============================================================================
  ISSUE 3: dds/core/Duration.hpp
==============================================================================
[Description] 
The methods from_* have a naming that is inconsistent with the rest of the 
methods in the same class, e.g., using milliseconds, microseconds, etc., in place
of millisecs, microsecs, etc.

[Proposed Resolution]
Fix the inconsistency.

==============================================================================
  ISSUE 4: QoS Builder
==============================================================================
[Description] 
The API has been polluted with methods fetching file names with XML descriptions of 
the QoS. These methods should be removed.

[Proposed Resolution]
Replace the methods with QoS Builder


==============================================================================
  ISSUE 5: Conditions are References or Values?
==============================================================================
[Description] 
Why aren't conditions values?


==============================================================================
  ISSUE 6: polymorphic_cast -- argument should be "const FROM&"
==============================================================================
[Description] 
Why aren't conditions values?

==============================================================================
  ISSUE 7: TheDomainParticipantFactory => theDomainParticipantFactory
==============================================================================
[Description] 
functions always start with smallcapital letters, this should not be an 
exception

==============================================================================
  ISSUE 8: TopicDescription.hpp
==============================================================================
[Description] 
The include references idds/topic/TopicDescription.hpp this dependency should
be encapsulated into dds/topic/detail/TopicDescription.hpp

 ==============================================================================
  ISSUE 9: DomainParticipantFactory.hpp
==============================================================================
[Description] 
The DomainParticipantFactory shall be removed once ctors will be used
uniformly for creating references.

==============================================================================
  ISSUE 10: DataReader create condition xyz API
==============================================================================
[Description] 
Maintaining create condition API on the reader ties the kind of conditions
supported by a data-reader with the data-reader API. As implementation might
provide their own custom condition it makes more sense to have a clear 
decoupling between the two.

The suggestion is to use the DataReader as an argument of the condition being
created.

==============================================================================
  ISSUE 11: ReaderQuery
==============================================================================
[Description] 
The ReaderQuery is a SwissArmy knife which should be removed in favour of a 
more modular aprroache based on the ReadStatus. In addition, the current
API makes  very confusing the read_next_instance semantics -- it is 
not clear at all how that should be used with the ReadQuery.

==============================================================================
  ISSUE 12: Policy Classes Lack of Copy Ctor
==============================================================================
The Policy class are lacking a copy ctor. This should be added for both
precise its semantics as well as avoid issues with Visual C++ compiler.


==============================================================================
	ISSUE 13
==============================================================================
ReaderDataLifeCicle forwards to Delegate methods which don't have the 
same name as the wrapper class.

==============================================================================
	ISSUE 14
==============================================================================
address dominance issue on Listeners!

